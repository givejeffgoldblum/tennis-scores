<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Tennis Score Tracker</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            text-align: center;
            background-color: #2E8B57;
            color: white;
        }
        .container {
            max-width: 600px;
            margin: 20px auto;
            padding: 20px;
            background-color: #006400;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        }
        button {
            margin: 5px;
            padding: 10px;
            font-size: 16px;
            cursor: pointer;
        }
        .history {
            margin-top: 20px;
            background-color: #228B22;
            padding: 10px;
            border-radius: 5px;
        }
        .entry {
            display: flex;
            justify-content: space-between;
            margin: 5px 0;
            padding: 5px;
            background-color: #3CB371;
            border-radius: 5px;
        }
        .entry button {
            font-size: 14px;
            padding: 5px;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Tennis Score Tracker</h1>
        <h2><span id="player1">Chris</span> vs <span id="player2">Toby</span></h2>
        
        <h3>Enter Set Scores</h3>
        <div>
            <select id="set1P1"></select> - <select id="set1P2"></select>
        </div>
        <div>
            <select id="set2P1"></select> - <select id="set2P2"></select>
        </div>
        <div>
            <select id="set3P1"></select> - <select id="set3P2"></select>
        </div>
        <button onclick="submitScore()">Submit Score</button>

        <h3>Score</h3>
        <p>Games: <span id="gamesP1">0</span> - <span id="gamesP2">0</span></p>
        <p>Sets: <span id="setsP1">0</span> - <span id="setsP2">0</span></p>
        <p>Matches: <span id="matchesP1">0</span> - <span id="matchesP2">0</span></p>

        <h3>Match History</h3>
        <div class="history" id="history"></div>
    </div>

    <script>
        let scores = { gamesP1: 0, gamesP2: 0, setsP1: 0, setsP2: 0, matchesP1: 0, matchesP2: 0 };
        let history = [];

        function populateDropdowns() {
            document.querySelectorAll("select").forEach(select => {
                select.innerHTML = "";
                for (let i = 0; i <= 8; i++) {
                    let option = document.createElement("option");
                    option.value = i;
                    option.textContent = i;
                    select.appendChild(option);
                }
            });
        }

        function isValidSetScore(p1, p2) {
            return (p1 >= 6 || p2 >= 6) && Math.abs(p1 - p2) >= 2 && (p1 <= 8 && p2 <= 8);
        }

        function submitScore() {
            let setsP1 = 0, setsP2 = 0, gamesP1 = 0, gamesP2 = 0;
            let matchEntry = [];
            
            for (let i = 1; i <= 3; i++) {
                let p1 = parseInt(document.getElementById(`set${i}P1`).value) || 0;
                let p2 = parseInt(document.getElementById(`set${i}P2`).value) || 0;
                
                if (isValidSetScore(p1, p2)) {
                    gamesP1 += p1;
                    gamesP2 += p2;
                    matchEntry.push(`${p1}-${p2}`);
                    if (p1 > p2) setsP1++;
                    else setsP2++;
                } else {
                    alert(`Invalid score for Set ${i}.`);
                    return;
                }
            }
            
            scores.gamesP1 += gamesP1;
            scores.gamesP2 += gamesP2;
            scores.setsP1 += setsP1;
            scores.setsP2 += setsP2;
            
            if (setsP1 >= 2) scores.matchesP1++;
            if (setsP2 >= 2) scores.matchesP2++;
            
            history.push(matchEntry);
            updateDisplay();
            updateHistory();
        }

        function updateDisplay() {
            document.getElementById("gamesP1").textContent = scores.gamesP1;
            document.getElementById("gamesP2").textContent = scores.gamesP2;
            document.getElementById("setsP1").textContent = scores.setsP1;
            document.getElementById("setsP2").textContent = scores.setsP2;
            document.getElementById("matchesP1").textContent = scores.matchesP1;
            document.getElementById("matchesP2").textContent = scores.matchesP2;
        }

        function updateHistory() {
            const historyDiv = document.getElementById("history");
            historyDiv.innerHTML = "";
            history.forEach((entry, index) => {
                let div = document.createElement("div");
                div.className = "entry";
                div.innerHTML = `Match ${index + 1}: ${entry.join(" | ")} <button onclick="deleteEntry(${index})">Delete</button>`;
                historyDiv.appendChild(div);
            });
        }

        function deleteEntry(index) {
            history.splice(index, 1);
            updateHistory();
        }

        window.onload = populateDropdowns;
    </script>
</body>
</html>
